{"version":3,"sources":["./src/app/modal/add-activie-modal/add-activie-modal.page.scss","./src/app/services/activities-api.service.ts","./src/app/modal/add-activie-modal/add-activie-modal.page.html","./src/app/modal/add-activie-modal/add-activie-modal.page.ts"],"names":[],"mappings":"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","file":"default~modal-add-activie-modal-add-activie-modal-module~pages-created-activitie-created-activitie-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFsL2FkZC1hY3RpdmllLW1vZGFsL2FkZC1hY3RpdmllLW1vZGFsLnBhZ2Uuc2NzcyJ9 */\";","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport firebase from \"firebase/app\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ActivitiesApiService {\n  url = \"http://localhost:3000/\";\n  constructor(private http: HttpClient, private database: AngularFireDatabase) {\n    let ref = firebase.database().ref(\"agriActivities\");\n    let a = ref\n      .onDisconnect()\n      .cancel()\n      .then((res) => {\n        console.log(\"we are offline!!\");\n      });\n  }\n\n  postActivitie(data) {\n    data[\"firebaseAdd\"] = false;\n    return this.http.post(this.url + `activities`, data);\n  }\n  upadteActivitieFirebaseStatus(data) {\n    // data[\"firebaseAdd\"] = false;\n    return this.http.patch(this.url + `activities/firebaseAdd`, data);\n  }\n\n  postActivitieToFirebase(activitie) {\n    console.log(activitie);\n    return new Promise((resolve, reject) => {\n      let database = this.database.list(\"agriActivities\");\n      database\n        .push(activitie)\n        .then((b) => {\n          resolve(b);\n        })\n        .catch((error) => {\n          reject(JSON.stringify(error));\n        });\n    });\n  }\n\n  getLastTenActivitie() {\n    return this.http.get(this.url + `activities`);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title></ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" slot=\\\"icon-only\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon name=\\\"close-circle-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-xl=\\\"12\\\">\\n        <div class=\\\"cole\\\">\\n          <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n            <div class=\\\"first\\\">\\n              <div class=\\\"divint\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">Nom</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer le nom de l'activitÃ© ici\\\"\\n                    formControlName=\\\"name\\\"\\n                    type=\\\"text\\\"\\n                  ></ion-input>\\n                </ion-item>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.name.errors?.required\\\"\\n                >\\n                  Name is required.\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.name.errors?.minlength\\\"\\n                >\\n                  Name should be min 2 chars long.\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.name.errors?.maxLength\\\"\\n                >\\n                  Name not should be max 20 chars long.\\n                </span>\\n              </div>\\n              <div>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">executant</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer l'information ici\\\"\\n                    formControlName=\\\"executant\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.executant.errors?.minlength\\\"\\n                >\\n                  Please provide valid executant .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.executant.errors?.maxLength\\\"\\n                >\\n                  Please provide valid executant .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.executant.errors?.required\\\"\\n                >\\n                  Entrer le executant.\\n                </span>\\n              </div>\\n\\n              <div class=\\\"divint\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">Superficie</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer la superficie ici\\\"\\n                    formControlName=\\\"superficie\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.superficie.errors?.minlength\\\"\\n                >\\n                  Please provide valid superficie .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.superficie.errors?.maxLength\\\"\\n                >\\n                  Please provide valid superficie .\\n                </span>\\n              </div>\\n              <div>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">Main d'oeuvre</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer le cout de la main d'oeuvre ici\\\"\\n                    formControlName=\\\"coutmaindoeuvre\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.coutmaindoeuvre.errors?.minlength\\\"\\n                >\\n                  Please provide valid price .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.coutmaindoeuvre.errors?.maxLength\\\"\\n                >\\n                  Please provide valid price .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.coutmaindoeuvre.errors?.required\\\"\\n                >\\n                  Entrer le cout de la main d'oeuvre.\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"second\\\">\\n              <div>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">FrÃ©quence</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer la frÃ©quence ici\\\"\\n                    formControlName=\\\"frequence\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.frequence.errors?.minlength\\\"\\n                >\\n                  Please provide valid frequence .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.frequence.errors?.maxLength\\\"\\n                >\\n                  Please provide valid frequence .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.frequence.errors?.required\\\"\\n                >\\n                  Entrer le frequence.\\n                </span>\\n              </div>\\n              <div>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">periode</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer la pÃ©riode ici\\\"\\n                    formControlName=\\\"periode\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.periode.errors?.minlength\\\"\\n                >\\n                  Please provide valid periode .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.periode.errors?.maxLength\\\"\\n                >\\n                  Please provide valid periode .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.periode.errors?.required\\\"\\n                >\\n                  Entrer la periode.\\n                </span>\\n              </div>\\n              <div>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">besoin materiel</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer le besoin ici\\\"\\n                    formControlName=\\\"besoinMateriel\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.besoinMateriel.errors?.minlength\\\"\\n                >\\n                  Please provide valid materiel .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.besoinMateriel.errors?.maxLength\\\"\\n                >\\n                  Please provide valid besoin materiel .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.besoinMateriel.errors?.required\\\"\\n                >\\n                  Entrer le besoin materiel.\\n                </span>\\n              </div>\\n              <div>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">cout materiel</ion-label>\\n                  <ion-input\\n                    placeholder=\\\"Entrer le cout ici\\\"\\n                    formControlName=\\\"coutMateriel\\\"\\n                    type=\\\"texte\\\"\\n                  ></ion-input>\\n                </ion-item>\\n\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.coutMateriel.errors?.minlength\\\"\\n                >\\n                  Please provide valid cout materiel .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.coutMateriel.errors?.maxLength\\\"\\n                >\\n                  Please provide valid cout materiel .\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.coutMateriel.errors?.required\\\"\\n                >\\n                  Entrer le cout materiel.\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"third\\\">\\n              <div class=\\\"divint\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"floating\\\">Description</ion-label>\\n                  <ion-textarea\\n                    placeholder=\\\"faite une description ici\\\"\\n                    formControlName=\\\"description\\\"\\n                    type=\\\"text\\\"\\n                  ></ion-textarea>\\n                </ion-item>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.description.errors?.required\\\"\\n                >\\n                  description is required.\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.description.errors?.minlength\\\"\\n                >\\n                  Name should be min 5 chars long.\\n                </span>\\n                <span\\n                  class=\\\"error ion-padding\\\"\\n                  *ngIf=\\\"isSubmitted && errorControl.description.errors?.maxLength\\\"\\n                >\\n                  Name not should be max 1000 chars long.\\n                </span>\\n              </div>\\n            </div>\\n            <ion-row>\\n              <ion-col>\\n                <div class=\\\"ion-text-center\\\">\\n                  <ion-button type=\\\"submit\\\" color=\\\"danger\\\" size=\\\"small\\\"\\n                    >Submit</ion-button\\n                  >\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivitiesApiService } from \"src/app/services/activities-api.service\";\nimport { Plugins, NetworkStatus, PluginListenerHandle } from \"@capacitor/core\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { ModalController } from \"@ionic/angular\";\nimport { InstructionPage } from \"../../modal/instruction/instruction.page\";\nimport * as firebsase from \"firebase\";\nconst { Network } = Plugins;\n@Component({\n  selector: \"app-add-activie-modal\",\n  templateUrl: \"./add-activie-modal.page.html\",\n  styleUrls: [\"./add-activie-modal.page.scss\"],\n})\nexport class AddActivieModalPage implements OnInit {\n  ionicForm: FormGroup;\n  // defaultDate = \"1987-06-30\";\n  isSubmitted = false;\n  networkStatus: NetworkStatus;\n  networkListener: PluginListenerHandle;\n  activitiesTab: any;\n  constructor(\n    public formBuilder: FormBuilder,\n    public activitiService: ActivitiesApiService,\n    private database: AngularFireDatabase,\n    public modalController: ModalController\n  ) {\n    this.getStatus();\n    this.getActivities();\n  }\n\n  async ngOnInit() {\n    this.ionicForm = this.formBuilder.group({\n      name: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(20),\n        ],\n      ],\n      description: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(1000),\n        ],\n      ],\n      superficie: [\n        \"\",\n        [\n          // Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(100),\n          // Validators.pattern(\"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$\"),\n        ],\n      ],\n      // dob: [this.defaultDate],\n      // mobile: [\"\", [Validators.required, Validators.pattern(\"^[0-9]+$\")]],\n      coutmaindoeuvre: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(1000),\n          //  Validators.pattern(\"^[0-9]+$\"),\n        ],\n      ],\n      frequence: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(1000),\n        ],\n      ],\n      periode: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(1000),\n        ],\n      ],\n      besoinMateriel: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(1000),\n        ],\n      ],\n      coutMateriel: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(1000),\n        ],\n      ],\n      executant: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(1000),\n        ],\n      ],\n    });\n  }\n  async getStatus() {\n    console.log(status);\n    console.log(\"hello status\");\n    this.networkListener = Network.addListener(\n      \"networkStatusChange\",\n      (status) => {\n        console.log(status);\n        this.networkStatus = status;\n      }\n    );\n    this.networkStatus = await Network.getStatus();\n  }\n  ngOnDestroy() {\n    this.networkListener.remove();\n  }\n  getDate(e) {\n    let date = new Date(e.target.value).toISOString().substring(0, 10);\n    this.ionicForm.get(\"dob\").setValue(date, {\n      onlyself: true,\n    });\n  }\n\n  get errorControl() {\n    return this.ionicForm.controls;\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.ionicForm.valid) {\n      console.log(\"Please provide all the required values!\");\n      return false;\n    } else {\n      console.log(this.ionicForm.value);\n      let emp = this.ionicForm.value;\n      this.activitiService.postActivitie(this.ionicForm.value).subscribe(\n        (result) => {\n          console.log(result[\"activitie\"]);\n          this.isSubmitted = false;\n          this.ionicForm.reset();\n          this.getActivities();\n          this.activitiService\n            .postActivitieToFirebase(result[\"activitie\"])\n            .then((res) => {\n              console.log(res);\n              this.updateActivitiesStatus({\n                id: result[\"activitie\"][\"_id\"],\n                status: true,\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n              this.updateActivitiesStatus({\n                id: result[\"activitie\"][\"_id\"],\n                status: false,\n              });\n            });\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    }\n  }\n  getActivities() {\n    this.activitiService.getLastTenActivitie().subscribe((data) => {\n      console.log(data);\n\n      this.activitiesTab = data;\n      // this.activitiesTab = this.activitiesTab.reverse();\n    });\n  }\n  updateActivitiesStatus(data) {\n    this.activitiService\n      .upadteActivitieFirebaseStatus(data)\n      .subscribe((data) => {\n        console.log(data);\n      });\n  }\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalController.dismiss({\n      dismissed: true,\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}