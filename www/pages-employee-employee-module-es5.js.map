{"version":3,"sources":["webpack:///src/app/pages/employee/employee.module.ts","webpack:///src/app/pages/employee/employee.page.ts","webpack:///src/app/pages/employee/employee.page.html","webpack:///src/app/pages/employee/employee-routing.module.ts","webpack:///src/app/models/employe.model.ts","webpack:///src/app/pages/employee/employee.page.scss"],"names":["EmployeePageModule","imports","declarations","EmployeePage","formBuilder","userService","toastController","database","auth","defaultDate","isSubmitted","userList","getEmployees","ionicForm","group","name","required","minLength","maxLength","poste","email","pattern","mobile","e","date","Date","target","value","toISOString","substring","get","setValue","onlyself","valid","console","log","emp","employe","inscription","then","res","addUserToFirebase","data","notifier","list","snapshotChanges","subscribe","actions","tab","forEach","action","a","payload","val","key","index","findIndex","elt","push","texte","create","message","duration","animated","position","toast","present","user","remove","err","controls","selector","template","routes","path","component","EmployeePageRoutingModule","forChild","exports","Employe","salaire"],"mappings":"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","file":"pages-employee-employee-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { EmployeePageRoutingModule } from \"./employee-routing.module\";\n\nimport { EmployeePage } from \"./employee.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EmployeePageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [EmployeePage],\n})\nexport class EmployeePageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Employe } from \"../../models/employe.model\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { ToastController } from \"@ionic/angular\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport { AuthentificationService } from \"src/app/services/authentification.service\";\n@Component({\n  selector: \"app-employee\",\n  templateUrl: \"./employee.page.html\",\n  styleUrls: [\"./employee.page.scss\"],\n})\nexport class EmployeePage implements OnInit {\n  ionicForm: FormGroup;\n  defaultDate = \"1987-06-30\";\n  isSubmitted = false;\n  userList = [];\n  constructor(\n    public formBuilder: FormBuilder,\n    public userService: UserService,\n    public toastController: ToastController,\n    private database: AngularFireDatabase,\n    public auth: AuthentificationService //\n  ) {\n    this.getEmployees();\n  }\n\n  ngOnInit() {\n    this.ionicForm = this.formBuilder.group({\n      name: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(20),\n        ],\n      ],\n      poste: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(20),\n        ],\n      ],\n      email: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$\"),\n        ],\n      ],\n      //dob: [this.defaultDate],\n      mobile: [\"\", [Validators.required, Validators.pattern(\"^[0-9]+$\")]],\n    });\n  }\n\n  getDate(e) {\n    let date = new Date(e.target.value).toISOString().substring(0, 10);\n    this.ionicForm.get(\"dob\").setValue(date, {\n      onlyself: true,\n    });\n  }\n\n  get errorControl() {\n    return this.ionicForm.controls;\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.ionicForm.valid) {\n      console.log(\"Please provide all the required values!\");\n      return false;\n    } else {\n      console.log(this.ionicForm.value);\n      let emp = this.ionicForm.value;\n      let employe = new Employe(emp.name, emp.poste, emp.email, emp.mobile);\n      console.log(employe);\n      this.auth.inscription(employe.email, \"hellohello123\").then((res) => {\n        console.log(res);\n        this.userService.addUserToFirebase(employe).then((data) => {\n          this.notifier(\"employé ajouté\");\n        });\n      });\n\n      this.ionicForm.value.name = \"\";\n    }\n  }\n  getEmployees() {\n    this.database\n      .list(\"agriUser\")\n      .snapshotChanges([\"child_added\"])\n      .subscribe((actions) => {\n        let tab = [];\n        actions.forEach((action) => {\n          let a = action.payload.val();\n          a[\"key\"] = action.key;\n          console.log(a);\n\n          let index = this.userList.findIndex((elt) => {\n            return elt.key === a[\"key\"];\n          });\n          if (index >= 0) {\n            console.log(\"existe\");\n          } else {\n            tab.push(a);\n          }\n        });\n        this.userList = tab;\n        console.log(this.userList);\n      });\n  }\n  async notifier(texte: string) {\n    const toast = await this.toastController.create({\n      message: texte,\n      duration: 5000,\n      animated: true,\n      position: \"top\",\n    });\n    toast.present();\n  }\n\n  removeEmploye(user) {\n    console.log(user);\n    this.database\n      .list(\"agriUser\")\n      .remove(user.key)\n      .then((res) => {\n        this.getEmployees();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"medium\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <div class=\\\"ion-text-center ion-text-uppercase\\\">\\n          <h3>ajouter un employé</h3>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size-xs=\\\"12\\\" size-md=\\\"3\\\" size-lg=\\\"3\\\" size-sm=\\\"12\\\"> </ion-col>\\n      <ion-col size-xs=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\" size-sm=\\\"12\\\">\\n        <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n          <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Name</ion-label>\\n            <ion-input formControlName=\\\"name\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.name.errors?.required\\\"\\n          >\\n            Name is required.\\n          </span>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.name.errors?.minlength\\\"\\n          >\\n            Name should be min 2 chars long.\\n          </span>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.name.errors?.maxLength\\\"\\n          >\\n            Name not should be max 20 chars long.\\n          </span>\\n\\n          <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Poste</ion-label>\\n            <ion-input formControlName=\\\"poste\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.poste.errors?.required\\\"\\n          >\\n            Name is required.\\n          </span>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.poste.errors?.minlength\\\"\\n          >\\n            Name should be min 2 chars long.\\n          </span>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.poste.errors?.maxLength\\\"\\n          >\\n            Name not should be max 20 chars long.\\n          </span>\\n\\n          <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.email.errors?.required\\\"\\n          >\\n            Email is required.\\n          </span>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.email.errors?.pattern\\\"\\n          >\\n            Please provide valid email id.\\n          </span>\\n\\n          <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Mobile</ion-label>\\n            <ion-input\\n              maxlength=\\\"10\\\"\\n              formControlName=\\\"mobile\\\"\\n              type=\\\"text\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.mobile.errors?.required\\\"\\n          >\\n            Mobile number is required.\\n          </span>\\n          <span\\n            class=\\\"error ion-padding\\\"\\n            *ngIf=\\\"isSubmitted && errorControl.mobile.errors?.pattern\\\"\\n          >\\n            Only numerical values allowed.\\n          </span>\\n\\n          <ion-row>\\n            <ion-col>\\n              <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\"\\n                >Submit</ion-button\\n              >\\n            </ion-col>\\n          </ion-row>\\n        </form>\\n      </ion-col>\\n      <ion-col size-xs=\\\"12\\\" size-md=\\\"3\\\" size-lg=\\\"3\\\" size-sm=\\\"12\\\"> </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <div class=\\\"ion-text-center ion-text-uppercase\\\">\\n          <h3>liste employés</h3>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size-xs=\\\"12\\\" size-md=\\\"3\\\" size-lg=\\\"3\\\" size-sm=\\\"12\\\"> </ion-col>\\n      <ion-col size-xs=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\" size-sm=\\\"12\\\">\\n        <ion-list>\\n          <ion-item *ngFor=\\\"let user of userList\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"person-outline\\\"></ion-icon>\\n            <ion-label>\\n              <h2>{{user.name}}</h2>\\n              <p>Email:{{user.email}}, Telephone: {{user.mobile}}</p>\\n            </ion-label>\\n            <ion-button fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"removeEmploye(user)\\\"\\n              >delete\\n              <ion-icon slot=\\\"end\\\" name=\\\"trash-bin-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n      <ion-col size-xs=\\\"12\\\" size-md=\\\"3\\\" size-lg=\\\"3\\\" size-sm=\\\"12\\\"> </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmployeePage } from './employee.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployeePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmployeePageRoutingModule {}\n","export class Employe {\r\n  name: string;\r\n  poste: string;\r\n\r\n  salaire: number = 0;\r\n  mobile: string;\r\n  email: string;\r\n\r\n  constructor(name, poste, email, mobile) {\r\n    this.name = name;\r\n    this.email = email;\r\n    this.mobile = mobile;\r\n    this.poste = poste;\r\n    //  this.salaire = salaire;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VtcGxveWVlL2VtcGxveWVlLnBhZ2Uuc2NzcyJ9 */\";"]}